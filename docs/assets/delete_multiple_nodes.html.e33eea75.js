import{_ as n}from"./plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,d as e}from"./app.b64e9441.js";const t={},p=e(`<h1 id="delete-multiple-nodes-in-drupal" tabindex="-1"><a class="header-anchor" href="#delete-multiple-nodes-in-drupal" aria-hidden="true">#</a> Delete multiple nodes in Drupal</h1><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$content_type</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;content_type_name&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$nids</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Drupal</span><span class="token operator">::</span><span class="token function">entityQuery</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;node&#39;</span><span class="token punctuation">)</span>
  <span class="token operator">-&gt;</span><span class="token function">condition</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token variable">$content_type</span><span class="token punctuation">)</span>
  <span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span>  <span class="token package"><span class="token punctuation">\\</span>Drupal<span class="token punctuation">\\</span>node<span class="token punctuation">\\</span>Entity<span class="token punctuation">\\</span>Node</span><span class="token punctuation">;</span>

<span class="token variable">$nodes</span> <span class="token operator">=</span> <span class="token class-name static-context">Node</span><span class="token operator">::</span><span class="token function">loadMultiple</span><span class="token punctuation">(</span><span class="token variable">$nids</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$nodes</span> <span class="token keyword">as</span> <span class="token variable">$node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token variable">$node</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$storage_handler</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Drupal</span><span class="token operator">::</span><span class="token function">entityTypeManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getStorage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;node&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$entities</span> <span class="token operator">=</span> <span class="token variable">$storage_handler</span><span class="token operator">-&gt;</span><span class="token function">loadMultiple</span><span class="token punctuation">(</span><span class="token variable">$ids</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$storage_handler</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token variable">$entities</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[p];function l(c,i){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","delete_multiple_nodes.html.vue"]]);export{d as default};
